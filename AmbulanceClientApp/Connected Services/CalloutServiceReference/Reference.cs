//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AmbulanceClientApp.CalloutServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallOutDataContract", Namespace="http://schemas.datacontract.org/2004/07/KwikMedical")]
    [System.SerializableAttribute()]
    public partial class CallOutDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionTakenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallOutIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HospitalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeSpentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionTaken {
            get {
                return this.ActionTakenField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionTakenField, value) != true)) {
                    this.ActionTakenField = value;
                    this.RaisePropertyChanged("ActionTaken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallOutId {
            get {
                return this.CallOutIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CallOutIdField, value) != true)) {
                    this.CallOutIdField = value;
                    this.RaisePropertyChanged("CallOutId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HospitalId {
            get {
                return this.HospitalIdField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalIdField, value) != true)) {
                    this.HospitalIdField = value;
                    this.RaisePropertyChanged("HospitalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIdField, value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeSpent {
            get {
                return this.TimeSpentField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeSpentField, value) != true)) {
                    this.TimeSpentField = value;
                    this.RaisePropertyChanged("TimeSpent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalloutServiceReference.ICallOutService")]
    public interface ICallOutService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallOutService/GetAllCallOuts", ReplyAction="http://tempuri.org/ICallOutService/GetAllCallOutsResponse")]
        AmbulanceClientApp.CalloutServiceReference.CallOutDataContract[] GetAllCallOuts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallOutService/GetAllCallOuts", ReplyAction="http://tempuri.org/ICallOutService/GetAllCallOutsResponse")]
        System.Threading.Tasks.Task<AmbulanceClientApp.CalloutServiceReference.CallOutDataContract[]> GetAllCallOutsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallOutService/GetCallOut", ReplyAction="http://tempuri.org/ICallOutService/GetCallOutResponse")]
        AmbulanceClientApp.CalloutServiceReference.CallOutDataContract GetCallOut(string callOutId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallOutService/GetCallOut", ReplyAction="http://tempuri.org/ICallOutService/GetCallOutResponse")]
        System.Threading.Tasks.Task<AmbulanceClientApp.CalloutServiceReference.CallOutDataContract> GetCallOutAsync(string callOutId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallOutService/InsertCallOut", ReplyAction="http://tempuri.org/ICallOutService/InsertCallOutResponse")]
        string InsertCallOut(string PatientId, string HospitalId, string Date, string Reason, string ActionTaken, string TimeSpent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallOutService/InsertCallOut", ReplyAction="http://tempuri.org/ICallOutService/InsertCallOutResponse")]
        System.Threading.Tasks.Task<string> InsertCallOutAsync(string PatientId, string HospitalId, string Date, string Reason, string ActionTaken, string TimeSpent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallOutService/UpdateCallOut", ReplyAction="http://tempuri.org/ICallOutService/UpdateCallOutResponse")]
        string UpdateCallOut(string CallOutId, string PatientId, string HospitalId, string Date, string Reason, string ActionTaken, string TimeSpent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallOutService/UpdateCallOut", ReplyAction="http://tempuri.org/ICallOutService/UpdateCallOutResponse")]
        System.Threading.Tasks.Task<string> UpdateCallOutAsync(string CallOutId, string PatientId, string HospitalId, string Date, string Reason, string ActionTaken, string TimeSpent);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICallOutServiceChannel : AmbulanceClientApp.CalloutServiceReference.ICallOutService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CallOutServiceClient : System.ServiceModel.ClientBase<AmbulanceClientApp.CalloutServiceReference.ICallOutService>, AmbulanceClientApp.CalloutServiceReference.ICallOutService {
        
        public CallOutServiceClient() {
        }
        
        public CallOutServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CallOutServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CallOutServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CallOutServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AmbulanceClientApp.CalloutServiceReference.CallOutDataContract[] GetAllCallOuts() {
            return base.Channel.GetAllCallOuts();
        }
        
        public System.Threading.Tasks.Task<AmbulanceClientApp.CalloutServiceReference.CallOutDataContract[]> GetAllCallOutsAsync() {
            return base.Channel.GetAllCallOutsAsync();
        }
        
        public AmbulanceClientApp.CalloutServiceReference.CallOutDataContract GetCallOut(string callOutId) {
            return base.Channel.GetCallOut(callOutId);
        }
        
        public System.Threading.Tasks.Task<AmbulanceClientApp.CalloutServiceReference.CallOutDataContract> GetCallOutAsync(string callOutId) {
            return base.Channel.GetCallOutAsync(callOutId);
        }
        
        public string InsertCallOut(string PatientId, string HospitalId, string Date, string Reason, string ActionTaken, string TimeSpent) {
            return base.Channel.InsertCallOut(PatientId, HospitalId, Date, Reason, ActionTaken, TimeSpent);
        }
        
        public System.Threading.Tasks.Task<string> InsertCallOutAsync(string PatientId, string HospitalId, string Date, string Reason, string ActionTaken, string TimeSpent) {
            return base.Channel.InsertCallOutAsync(PatientId, HospitalId, Date, Reason, ActionTaken, TimeSpent);
        }
        
        public string UpdateCallOut(string CallOutId, string PatientId, string HospitalId, string Date, string Reason, string ActionTaken, string TimeSpent) {
            return base.Channel.UpdateCallOut(CallOutId, PatientId, HospitalId, Date, Reason, ActionTaken, TimeSpent);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCallOutAsync(string CallOutId, string PatientId, string HospitalId, string Date, string Reason, string ActionTaken, string TimeSpent) {
            return base.Channel.UpdateCallOutAsync(CallOutId, PatientId, HospitalId, Date, Reason, ActionTaken, TimeSpent);
        }
    }
}
