//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeadOfficeClientApplication.PatientServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientDataContract", Namespace="http://schemas.datacontract.org/2004/07/KwikMedical")]
    [System.SerializableAttribute()]
    public partial class PatientDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuranceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalConditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionalHospitalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsuranceNumber {
            get {
                return this.InsuranceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuranceNumberField, value) != true)) {
                    this.InsuranceNumberField = value;
                    this.RaisePropertyChanged("InsuranceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalConditions {
            get {
                return this.MedicalConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalConditionsField, value) != true)) {
                    this.MedicalConditionsField = value;
                    this.RaisePropertyChanged("MedicalConditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIdField, value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionalHospital {
            get {
                return this.RegionalHospitalField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionalHospitalField, value) != true)) {
                    this.RegionalHospitalField = value;
                    this.RaisePropertyChanged("RegionalHospital");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PatientServiceReference.IPatientService")]
    public interface IPatientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetAllPatients", ReplyAction="http://tempuri.org/IPatientService/GetAllPatientsResponse")]
        HeadOfficeClientApplication.PatientServiceReference.PatientDataContract[] GetAllPatients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetAllPatients", ReplyAction="http://tempuri.org/IPatientService/GetAllPatientsResponse")]
        System.Threading.Tasks.Task<HeadOfficeClientApplication.PatientServiceReference.PatientDataContract[]> GetAllPatientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetPatient", ReplyAction="http://tempuri.org/IPatientService/GetPatientResponse")]
        HeadOfficeClientApplication.PatientServiceReference.PatientDataContract GetPatient(string patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetPatient", ReplyAction="http://tempuri.org/IPatientService/GetPatientResponse")]
        System.Threading.Tasks.Task<HeadOfficeClientApplication.PatientServiceReference.PatientDataContract> GetPatientAsync(string patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/InsertPatient", ReplyAction="http://tempuri.org/IPatientService/InsertPatientResponse")]
        string InsertPatient(string FirstName, string LastName, string Address, string InsuranceNumber, string RegionalHospital, string MedicalConditions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/InsertPatient", ReplyAction="http://tempuri.org/IPatientService/InsertPatientResponse")]
        System.Threading.Tasks.Task<string> InsertPatientAsync(string FirstName, string LastName, string Address, string InsuranceNumber, string RegionalHospital, string MedicalConditions);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPatientServiceChannel : HeadOfficeClientApplication.PatientServiceReference.IPatientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PatientServiceClient : System.ServiceModel.ClientBase<HeadOfficeClientApplication.PatientServiceReference.IPatientService>, HeadOfficeClientApplication.PatientServiceReference.IPatientService {
        
        public PatientServiceClient() {
        }
        
        public PatientServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PatientServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PatientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PatientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HeadOfficeClientApplication.PatientServiceReference.PatientDataContract[] GetAllPatients() {
            return base.Channel.GetAllPatients();
        }
        
        public System.Threading.Tasks.Task<HeadOfficeClientApplication.PatientServiceReference.PatientDataContract[]> GetAllPatientsAsync() {
            return base.Channel.GetAllPatientsAsync();
        }
        
        public HeadOfficeClientApplication.PatientServiceReference.PatientDataContract GetPatient(string patientId) {
            return base.Channel.GetPatient(patientId);
        }
        
        public System.Threading.Tasks.Task<HeadOfficeClientApplication.PatientServiceReference.PatientDataContract> GetPatientAsync(string patientId) {
            return base.Channel.GetPatientAsync(patientId);
        }
        
        public string InsertPatient(string FirstName, string LastName, string Address, string InsuranceNumber, string RegionalHospital, string MedicalConditions) {
            return base.Channel.InsertPatient(FirstName, LastName, Address, InsuranceNumber, RegionalHospital, MedicalConditions);
        }
        
        public System.Threading.Tasks.Task<string> InsertPatientAsync(string FirstName, string LastName, string Address, string InsuranceNumber, string RegionalHospital, string MedicalConditions) {
            return base.Channel.InsertPatientAsync(FirstName, LastName, Address, InsuranceNumber, RegionalHospital, MedicalConditions);
        }
    }
}
